---
title: "Take Home Exercise 02"
format:
  html:
    code-fold: True
    code-summary: "Show the code"
    toc: True
    toc-depth: 4
execute:
  eval: True
  echo: True
  warning: False
date: "`r Sys.Date()`"
---

# Project Overview

From prof:

As a curious geospatial analytics green horn, you are interested to discover:

-   if the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time.

-   If the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.

## General Outline of Project

The specific tasks of this take-home exercise are as follows:

-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:

    -   a study area layer in sf polygon features. It must be at village level and confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.

    -   a dengue fever layer within the study area in sf point features. The dengue fever cases should be confined to epidemiology week 31-50, 2023.

    -   a derived dengue fever layer in [spacetime s3 class of sfdep](https://sfdep.josiahparry.com/articles/spacetime-s3). It should contain, among many other useful information, a data field showing number of dengue fever cases by village and by epidemiology week.

-   Using the extracted data, perform [global spatial autocorrelation analysis](https://r4gdsa.netlify.app/chap09.html).

-   Using the extracted data, perform [local spatial autocorrelation analysis](https://r4gdsa.netlify.app/chap10.html).

-   Using the extracted data, perform [emerging hotspot analysis](https://is415-ay2023-24t2.netlify.app/th_ex2).

-   Describe the spatial patterns revealed by the analysis above.

# Datasets Used

For the purpose of this take-home exercise, two data sets are provided, they are:

-   TAIWAN_VILLAGE_2020, a geospatial data of village boundary of Taiwan. It is in ESRI shapefile format. The data is in Taiwan Geographic Coordinate System. (Source: [Historical map data of the village boundary: TWD97 longitude and latitude](https://data.gov.tw/en/datasets/130549))

-   Dengue_Daily.csv, an aspatial data of reported dengue cases in Taiwan since 1998. (Source: [Dengue Daily Confirmed Cases Since 1998](https://data.cdc.gov.tw/en/dataset/dengue-daily-determined-cases-1998). Below are selected fields that are useful for this study:

    -   發病日: Onset date

    -   最小統計區中心點X: x-coordinate

    -   最小統計區中心點Y: y-coordinate

# Loading of Packages into R Environment

First, we will be using the following R packages for the analysis


-   sf
-   sfdep
-   tmap
-   tidyverse
-   lubridate


```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse, lubridate)
```

# Importing and Wrangling of Data
## Importing of Geospatial Data

Now, we will import the map of Tainan.

```{r}
tainan_vil <- st_read(dsn='data/geospatial',
                 layer = "TAINAN_VILLAGE")
```
We notice that instead of WGS84, the data is in TWD97. This is Taiwan's own projected coordinate system.

Now, I will plot out the map of Tainan Village
```{r}
plot(tainan_vil["COUNTYCODE"])
```


## Importing of Aspatial Data

Now, I will be using `read_csv()` to import the aspatial data (in csv format) into my R environment

```{r}
dengue <- read_csv("data/aspatial/Dengue_Daily.csv")
```

We can check the content of *dengue* using the following code chunk:

```{r}
list(dengue)
```
The column names of interest are "通報日" (TL: date), "最小統計區中心點X" (TL: x-coordinate), "最小統計區中心點Y" (TL: y-coordinate).

We notice that the data in dengue does not list the county name and instead only provides the coordinates of the dengue case. This suggests that we cannot use table joins and we will need to find the points that fall within the specific districts of Tainan Village. 

There are also some rows that have None values in the x- and y- coordinates.We can exclude them using the following code chunk:

```{r}
# the None values are a character type so need to omit rows where either 最小統計區中心點X or 最小統計區中心點Y is "None"
dengue <- dengue[!(dengue$最小統計區中心點X == "None" | dengue$最小統計區中心點Y == "None"), ]

```

We also notice that the coordinates in "最小統計區中心點X" and "最小統計區中心點Y" are in projected coordinates system. For now, it is unclear whether this is under the WGS84 coordinate system or TWD97. We will proceed with the assumption that it is in TWD97.

Another issue is that we need to analyse the dengue cases from specific weeks 31-50 in 2023 and the *dengue* contins cases from 1998 and in YMD format. To restrict this, we can also run the following code chunk:

```{r}
# get the ones from 2023
dengue$epiweek <- epiweek(dengue$發病日)
dengue$epiyear <- epiyear(dengue$發病日)

dengue_2023 <- dengue[dengue$epiyear==2023,]

# get only from weeks 31-50
dengue_2023 <- dengue_2023[dengue_2023$epiweek>=31 & dengue_2023$epiweek<=50,]
```

## Data Wrangling
### Creating a simple feature data frame from aspatial data frame

Now, I will use `st_as_sf` from the **sf** package to convert the dengue data frame into a simple feature data frame.

```{r}
dengue_sf <- st_as_sf(dengue,
                      coords = c("最小統計區中心點X","最小統計區中心點Y"),
                      crs = 3826)
```

### Extraction of Districts of Interest

```{r}
D01 <- tainan_vil %>%
  filter(TOWNID=="D01") %>%
  select()

D02 <- tainan_vil %>%
  filter(TOWNID=="D02") %>%
  select()

D04 <- tainan_vil %>%
  filter(TOWNID=="D04") %>%
  select()

D06 <- tainan_vil %>%
  filter(TOWNID=="D06") %>%
  select()

D07 <- tainan_vil %>%
  filter(TOWNID=="D07") %>%
  select()

D08 <- tainan_vil %>%
  filter(TOWNID=="D08") %>%
  select()

D32 <- tainan_vil %>%
  filter(TOWNID=="D32") %>%
  select()

D39 <- tainan_vil %>%
  filter(TOWNID=="D39") %>%
  select()
```



