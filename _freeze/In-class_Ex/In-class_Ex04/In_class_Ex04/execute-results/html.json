{
  "hash": "67f4709642050f37b0ee1bf2149ba2d9",
  "result": {
    "markdown": "---\ntitle: \"In-class exercise 4\"\nformat:\n  html:\n    code-fold: True\n    code-summary: \"Show the code\"\n    toc: True\n    toc-depth: 4\nexecute:\n  eval: True\n  echo: True\n  message: False\n  warning: False\n  freeze: True\ndate: \"2024-02-19\"\n---\n\n\n# Prof tips\n\n-   Remember that the coordinates are in geographic system, not projected\n\n-   Good practice to check the data itself\n\n-   IRL, GIS analysts will have to clean the data and do the joins\n\n-   Read documentation\n\n# Redo of Hands-on Exercise 5\n\n## Loading of packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n```\n:::\n\n\n## Reading of Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Hunan' from data source \n  `D:\\KrisLBT\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\n## Import csv into R environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n:::\n\n\n## Performing Relational Join\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combines both the hunan and hunan2012 data.frames together\n#subsequently selects certain (2-5, 8 and 16th) columns only\nhunan <- left_join(hunan,hunan2012)%>%\n  select(1:4, 7, 15)\n```\n:::\n\n\n## **Visualising Regional Development Indicator**\n\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using *qtm()* of **tmap** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbasemap <- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc <- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](In_class_Ex04_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nOutput is list of polygons\n\nAverage: if the average is not a whole number –\\> get the rounded value (usually round down)\n\nRound up for distance\n\nLat long should be true\n\n# Take Home Exercise 1\n\n## Installation of Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n```\n:::\n\n\n## Reading of Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn='data/geospatial'\n                 ,layer='Hunan')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Hunan' from data source \n  `D:\\KrisLBT\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n:::\n\n\n## Modifying Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combines both the hunan and hunan2012 data.frames together\n#subsequently selects certain (2-5, 8 and 16th) columns only\n#must do early, otherwise will lose GDP data\nhunan <- left_join(hunan,hunan2012)%>%\n  select(1:4, 7, 15)\n```\n:::\n\n\n## Intro to GWModel\n\nGWModel –\\> provide a collection of R libraries that let us use distance matrix to conduct summary statistics, multivariate statistics, discriminant analysis, principal components, logistic regression, multiple linear regression, generalised regression, etc.\n\nIn this in-class exercise, we will be using GWModel to conduct summary statistics.\n\n### Working with GWSS\n\n::: callout-caution\n## This package cannot accept SF, must be sp object class\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_sp <- hunan %>%\n  as_Spatial()\n```\n:::\n\n\nThe adaptive bandwith has to be number of neighbours (bw).\n\nCan take in multiple variables., at the same time (vars)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwstat <- gwss(data=hunan_sp,\n               vars=\"GDPPC\",\n               bw=6,\n               kernel='bisquare',\n               adaptive=TRUE,\n               longlat=T)\n```\n:::\n\n\nGDPPC_LM is the same as the application of spatial lag (specifically the distance matrix).\n\nmean, standard deviation, variance, skew, coefficience of variations.\n\n```         \nView(gwstat[[\"SDF\"]]@data) --> to view\n```\n\n# Homework: get hands-on exercise results\n",
    "supporting": [
      "In_class_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}