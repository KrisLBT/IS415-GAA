{
  "hash": "61d2dd4834ee80f20c02c033e33860bb",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 2\"\nformat:\n  html:\n    code-fold: True\n    code-summary: \"Show the code\"\n    toc: True\n    toc-depth: 4\nexecute:\n  eval: True\n  freeze: True\n  echo: True\n  warning: False\ndate: \"2024-03-04\"\n---\n\n\n# Project Overview\n\nIn 2023, Taiwan recorded the [worst outbreak of dengue fever since 2015.](https://focustaiwan.tw/society/202310030018) The outbreak mostly centered in Tainan, [prompting escalated rates of inspections in high-risk areas and buildings](https://www.tainan.gov.tw/en/News_Content.aspx?n=13205&s=8592883).\n\nThe general criteria to label an area high-risk would be a place that has poor gutter structural design, blockages in the drain or are largely abandoned. Such issues increase the chance of water remaining stagnant and facilitates the continued reproduction of mosquitoes, the vector through which dengue fever is perpetuated.\n\nWhile this criteria is well-founded, it is possible to improve the identification of high-risk areas to enable more efficient use of resources through more precise targeting.\n\nTo do so, we will need to\n\n-   Identify if the distribution of dengue fever outbreak in Tainan City, Taiwan is independent spatially or spatio-temporally and if so,\n\n-   Identify the present hot and cold areas, as well as emergent ones\n\n## General Outline of Project\n\nI will be investigating the spatial autocorrelation of dengue fever in Tainan City, on both a local and global level. The global autocorrelation tells us if there are signs of clustering for the entirety of the dataset. Local autocorrelation further shows us the relationship of the clustering in a given area to its neighbours (e.g. if a hotspot is surrounded by coldspots and vice-versa).\n\nThis project also encompasses an analysis of the spatio-temporal autocorrelation of dengue, which allows us to identify any emergent hotspots in the dataset.\n\nFor this project, the analysis will be limited to Tainan City, the epicentre of dengue in Taiwan, specifically the following counties in Tainan City:\n\n-   D01\n\n-   D02\n\n-   D04\n\n-   D06\n\n-   D07\n\n-   D08\n\n-   D32\n\n-   D39\n\nThe analysis will be limited to the specific timeframe where dengue cases spiked in 2023, which were epidemiological weeks 31-50.\n\nAfter performing all of the analysis, I will discuss the outcome of the results.\n\n# Datasets Used\n\nI will be using the following data sets (provided by the professor):\n\n-   TAIWAN_VILLAGE_2020, a geospatial data of village boundary of Taiwan. It is in ESRI shapefile format. The data is in Taiwan Geographic Coordinate System. (Source: [Historical map data of the village boundary: TWD97 longitude and latitude](https://data.gov.tw/en/datasets/130549))\n\n-   Dengue_Daily.csv, an aspatial data of reported dengue cases in Taiwan since 1998. (Source: [Dengue Daily Confirmed Cases Since 1998](https://data.cdc.gov.tw/en/dataset/dengue-daily-determined-cases-1998). Below are selected fields that are useful for this study:\n\n    -   發病日: Onset date\n\n    -   最小統計區中心點X: X-coordinate\n\n    -   最小統計區中心點Y: Y-coordinate\n\n    -   居住縣市: County name\n\n    -   居住村里: Village name\n\n    -   居住鄉鎮: Town name\n\n# Loading of Packages\n\nWe will be using the following R packages for this exercise:\n\n-   *sf*: Package for handing spatial data\n\n-   *sfdep*: Package for testing the space-time autocorrelation of data\n\n-   *tmap*: Package to generate thematic maps\n\n-   *tidyverse*: Collection of packages for data science. This collection includes tidyr, ggplot2 and dplyr, among others\n\n-   *lubridate*: Package to handle dates and times\n\n-   *plotly*: Package to create interactive maps in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, lubridate, plotly)\n```\n:::\n\n\n# Reading of Data into R environment\n\n## Importing of Geospatial Data\n\nI will be importing the *tainan_vil* data into my R environment using `st_read()` of the **sf** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_vil <- st_read(dsn = \"data/geospatial\",\n                  layer=\"TAINAN_VILLAGE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `D:\\KrisLBT\\IS415-GAA\\Take_Home_Exercises\\Take_Home_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n:::\n\n\n## Importing of Aspatial Data\n\nNow, I will be importing the daily dengue data into my R environment using the `read_csv()` function of the **sf** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n```\n:::\n\n\n## Further Cleaning\n\nFor my own convenience, I decided to translate the columns in dengue from Traditional Chinese to English and also try to link them up the columns in counties_sf. The following code chunk was written to perform it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue %>%\n  rename('X-Coordinate' = 最小統計區中心點X,\n         'Y-Coordinate' = 最小統計區中心點Y,\n         'COUNTYNAME' = 居住縣市,\n         'VILLNAME' = 居住村里,\n         'TOWNNAME' = 居住鄉鎮)\n```\n:::\n\n\n# Data Wrangling\n\n## Getting the Districts of Interest\n\nWe will be restricting *tainan_vil* to the counties mentioned above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#getting the districts of interest\ndistricts = c(\"D01\",\"D02\",\"D04\",\"D06\",\"D07\",\"D08\",\"D32\",\"D39\")\n\n#restricting the village into just the required districts\ndistricts_sf = tainan_vil[tainan_vil$TOWNID %in% districts, ]\n```\n:::\n\n\nHowever, we also face the problem of repeated village names in different towns. To fix this, we can specify the village name with the town name:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistricts_sf <- unite(districts_sf, VILLNAME, TOWNNAME, VILLNAME, sep = \"-\")\n```\n:::\n\n\n## Getting the Dengue Cases of Interest\n\nWe are also only interested in the dengue cases between weeks 31-50 in 2023. We can further restrict it using the following code chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the ones from 2023\ndengue$epiweek <- epiweek(dengue$發病日)\ndengue$epiyear <- epiyear(dengue$發病日)\n\ndengue <- dengue[dengue$epiyear==2023,]\n\n# get only from weeks 31-50\ndengue <- dengue[dengue$epiweek>=31 & dengue$epiweek<=50,]\n```\n:::\n\n\nI also wanted to let the VILLNAME in dengue follow the same format as the VILLNAME in *tainan_vil*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- unite(dengue, VILLNAME, TOWNNAME, VILLNAME, sep = \"-\")\n```\n:::\n\n\nWe can use the `summary()` function to investigate the contents of *dengue*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     發病日            個案研判日            通報日          \n Min.   :2023-07-30   Length:25475       Min.   :2023-07-30  \n 1st Qu.:2023-09-11   Class :character   1st Qu.:2023-09-13  \n Median :2023-10-01   Mode  :character   Median :2023-10-03  \n Mean   :2023-10-03                      Mean   :2023-10-05  \n 3rd Qu.:2023-10-25                      3rd Qu.:2023-10-27  \n Max.   :2023-12-16                      Max.   :2023-12-23  \n     性別              年齡層           COUNTYNAME          VILLNAME        \n Length:25475       Length:25475       Length:25475       Length:25475      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  最小統計區        X-Coordinate       Y-Coordinate        一級統計區       \n Length:25475       Length:25475       Length:25475       Length:25475      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  二級統計區          感染縣市           感染鄉鎮           感染村里        \n Length:25475       Length:25475       Length:25475       Length:25475      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n 是否境外移入         感染國家           確定病例數 居住村里代碼      \n Length:25475       Length:25475       Min.   :1    Length:25475      \n Class :character   Class :character   1st Qu.:1    Class :character  \n Mode  :character   Mode  :character   Median :1    Mode  :character  \n                                       Mean   :1                      \n                                       3rd Qu.:1                      \n                                       Max.   :1                      \n 感染村里代碼          血清型          內政部居住縣市代碼 內政部居住鄉鎮代碼\n Length:25475       Length:25475       Length:25475       Length:25475      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n 內政部感染縣市代碼 內政部感染鄉鎮代碼    epiweek         epiyear    \n Length:25475       Length:25475       Min.   :31.00   Min.   :2023  \n Class :character   Class :character   1st Qu.:37.00   1st Qu.:2023  \n Mode  :character   Mode  :character   Median :40.00   Median :2023  \n                                       Mean   :39.96   Mean   :2023  \n                                       3rd Qu.:43.00   3rd Qu.:2023  \n                                       Max.   :50.00   Max.   :2023  \n```\n:::\n:::\n\n\nLooking through the dataframe, I noticed that there are some \"None\" values in the X- and Y-coordinates. I will remove them using the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# removing rows with None values in X-Coordinates and Y-Coordinates\n# note that X- and Y-Coordinates are both in character form and not numerical form\ndengue <- subset(dengue, `X-Coordinate` != \"None\" & \n                             `Y-Coordinate` != \"None\" &\n                             VILLNAME %in% districts_sf$VILLNAME)\n\n# assess if any None values remain\nsum(dengue$`X-Coordinate` == \"None\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nFinally, I will be converting dengue into an **sf** object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create sf object after handling missing values\ndengue_sf <- st_as_sf(dengue, coords = c(\"X-Coordinate\", \"Y-Coordinate\"), crs = st_crs(districts_sf))\n```\n:::\n\n\n# Subsetting the Dengue Cases into the Regions of Interest\n\nSince the dengue cases is for the whole of Tainan Village and not just the districts, we will need to take only the cases that happened within the districts of interest. Morever, we need to retain crucial information such as the epidemiological week that the case occurred in, the village and number of cases per week.\n\nBefore that, we can get the total number of cases per week per village in a given town.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengueCounty <- dengue %>%\n  group_by(VILLNAME, epiweek) %>%\n  summarise(WEEKLY_DENGUE_CASE_NUM=n()) %>%\n  filter(VILLNAME != \"None\") %>%\n  st_drop_geometry()\n```\n:::\n\n\nHowever, doing this will drop weeks that have 0 cases. We can fix this using the following code chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# generate all combinations of VILLNAME from districts_sf and weeks from 31 to 50\nall_combinations <- expand_grid(VILLNAME = unique(districts_sf$VILLNAME),\n                                epiweek = 31:50)\n\n# left join with dengueCounty to retain existing records\ndengueCountyComplete <- left_join(all_combinations, dengueCounty, by = c(\"VILLNAME\", \"epiweek\"))\n\n# replace missing sums with 0\ndengueCountyComplete <- mutate(dengueCountyComplete, WEEKLY_DENGUE_CASE_NUM = if_else(is.na(WEEKLY_DENGUE_CASE_NUM), 0, WEEKLY_DENGUE_CASE_NUM))\n```\n:::\n\n\n# Global and Local Measures of Spatial Autocorrelation - sfdep methods\n\nNow, I will analyse the global and local measures of spatial autocorrelation. This will allow us to answer the following questions:\n\n-   Are dengue cases distributed evenly geographically?\n-   If not, is there signs of spatial clustering?\n-   If yes, where are these clusters?\n\nThere are many ways to perform this. In this exercise, I will be using the Moran's I for both.\n\nBefore we conduct this analysis, we will need to prepare the data.\n\n## Preparation of Data\n\n### Joining the Attribute Tables\n\nI will be joining *districts_sf* with *dengueCountyComplete* so we can analyse the global and local spatial autocorrelation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_dengue <- left_join(districts_sf, dengueCountyComplete)\n```\n:::\n\n\n### Visualisation using a Choropleth map\n\nWe can visualise the distribution using a choropleth map:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(tainan_dengue) +\n  tm_fill(\"WEEKLY_DENGUE_CASE_NUM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"WEEKLY_DENGUE_CASE_NUM\") +\n  tm_layout(main.title = \"Distribution of case number\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nWe can also visualise this data according to month. For this, I will be using the month of September:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsept <- tainan_dengue %>%\n  filter(epiweek>35 & epiweek<40)\ntmap_mode(\"plot\")\ntm_shape(tainan_dengue) +\n  tm_fill(\"WEEKLY_DENGUE_CASE_NUM\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"WEEKLY_DENGUE_CASE_NUM\") +\n  tm_layout(main.title = \"Distribution of case number in September\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nWe notice that from the quantiles that it is very positively skewed. As such, this suggests that there could be some clustering for the dengue cases.\n\n### Deriving Contiguity weights: Queen's Method\n\nWe will now derive the contiguity weights using the Queen's method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- tainan_dengue %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n```\n:::\n\n\nWe can get a basic overview of *wm_q* using the following code chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 5160 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\nFirst 10 features:\n                                                                                                                                                                                                                                                                                                                                                                                                                       nb\n1  2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n2  1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n3  1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n4  1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n5  1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n6  1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n7  1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n8  1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n9  1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\n10  1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200\nwt\nnnnnnnnnnn      VILLCODE COUNTYNAME      VILLNAME      VILLENG COUNTYID COUNTYCODE TOWNID\n1  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n2  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n3  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n4  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n5  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n6  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n7  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n8  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n9  67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n10 67000350032     臺南市 安南區-青草里 Qingcao Vil.        D      67000    D06\n   TOWNCODE NOTE epiweek WEEKLY_DENGUE_CASE_NUM                       geometry\n1  67000350 <NA>      31                      0 POLYGON ((120.1176 23.08387...\n2  67000350 <NA>      32                      0 POLYGON ((120.1176 23.08387...\n3  67000350 <NA>      33                      0 POLYGON ((120.1176 23.08387...\n4  67000350 <NA>      34                      0 POLYGON ((120.1176 23.08387...\n5  67000350 <NA>      35                      0 POLYGON ((120.1176 23.08387...\n6  67000350 <NA>      36                      0 POLYGON ((120.1176 23.08387...\n7  67000350 <NA>      37                      1 POLYGON ((120.1176 23.08387...\n8  67000350 <NA>      38                      0 POLYGON ((120.1176 23.08387...\n9  67000350 <NA>      39                      0 POLYGON ((120.1176 23.08387...\n10 67000350 <NA>      40                      0 POLYGON ((120.1176 23.08387...\n```\n:::\n:::\n\n\n## Global Measure of Spatial Autocorrelation\n\n### Computing Global Moran's I Permutation Test\n\nIn this project, I opted to use a Global Moran's I permutation test as opposed to a standard, Global Moran's I test, as it would allow us to test the spatial autocorrelation using multiple simulation of tests instead of just 1.\n\nTo ensure the results are reproducable, I will be setting the seed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\nNext, `global_moran_perm()` is used to perform Monte Carlo simulation. It will run 100 simulations (n = 99+1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$WEEKLY_DENGUE_CASE_NUM,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15977, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\nThe statistical report above show that the p-value is smaller than alpha value of 0.05. Hence, we have enough statistical evidence to reject the null hypothesis that the spatial distribution of dengue case resemble random distribution (i.e. independent from spatial). Because the Moran’s I statistics is greater than 0. We can infer that the spatial distribution shows signs of clustering.\n\n## Local Measure of Spatial Autocorrelation\n\n### Local Moran's I\n\nIn this section,I will be computing the Local Moran's I of *tainan_dengue* using `local_moran()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>% \n  mutate(local_moran = local_moran(\n    WEEKLY_DENGUE_CASE_NUM, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### Visualising Local Moran's I\n\nIn this code chunk below, tmap functions are used prepare a choropleth map by using value in the ii field.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nThe negative values suggest that the area is an outlier (i.e. a high-value area surrounded by low-value areas and vice-versa).\n\n### Visualising Local Moran's I and p-values\n\nWhile the above does show the outliers in the dataset, it is also helpful to visualise it along with the p-values, showing the probability of the result being significant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nWe can see that the majority of the not significant (p-value \\> 0.05) areas correspond the negative values in ii. This suggests that the distribution of dengue cases are largely consistent throughout the counties.\n\n### Visualising a LISA map\n\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low cluaters. In fact, LISA map is an interpreted map by combining local Moran’s I of geographical areas and their respective p-values.\n\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n# Emerging Hot Spot Analysis\n\nWe can also analyse the emerging hot spots of dengue clusters in the villages in Tainan Village.\n\n## Creating a time-series cube\n\nI will now create the time series cube from *dengueCountyComplete*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_county_st <- spacetime(dengueCountyComplete, districts_sf,\n                              .loc_col=\"VILLNAME\",\n                              .time_col =\"epiweek\" )\n```\n:::\n\n\nNext, `is_spacetime_cube()` will be used to verify if *dengue_county_st* is indeed a time series cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(dengue_county_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Computing Gi\\*\n\nThe code chunk below will be used to identify neighbors and to derive an inverse distance weights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_county_nb <- dengue_county_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\nI can now visualise the head of *dengue_county_nb*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dengue_county_nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  VILLNAME      epiweek WEEKLY_DENGUE_CASE_NUM nb        wt       \n  <chr>           <dbl>                  <dbl> <list>    <list>   \n1 安南區-青草里      31                      0 <int [4]> <dbl [4]>\n2 仁德區-保安里      31                      1 <int [6]> <dbl [6]>\n3 中西區-赤嵌里      31                      0 <int [9]> <dbl [9]>\n4 南區-大成里        31                      0 <int [7]> <dbl [7]>\n5 安南區-城北里      31                      0 <int [5]> <dbl [5]>\n6 安南區-城南里      31                      0 <int [8]> <dbl [8]>\n```\n:::\n:::\n\n\nI can use these new columns to manually calculate the local Gi\\* for each location. We can do this by grouping by Year and using local_gstar_perm() of sfdep package. After which, we use unnest() to unnest gi_star column of the newly created gi_starts data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- dengue_county_nb %>% \n  group_by(epiweek) %>% \n  mutate(gi_star = local_gstar_perm(\n    WEEKLY_DENGUE_CASE_NUM, nb, wt)) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n\n## Mann-Kendall Test\n\nI can now test the significance of the local Gi\\* for each location and plot it out.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_stars %>%\n  group_by(VILLNAME) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n:::\n\n\nNow, I can arrange it to show significant hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# arranging\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n\n# showing\nhead(emerging)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 6\n  VILLNAME         tau         sl     S     D  varS\n  <chr>          <dbl>      <dbl> <dbl> <dbl> <dbl>\n1 東區-崇信里   -0.789 0.00000134  -150  190.   950\n2 東區-德光里   -0.695 0.0000214   -132  190.   950\n3 永康區-中興里 -0.663 0.0000500   -126  190.   950\n4 永康區-五王里 -0.663 0.0000500   -126  190.   950\n5 永康區-成功里 -0.663 0.0000500   -126  190.   950\n```\n:::\n:::\n\n\n## Performing Emerging Hotspot Analysis\n\nLastly, we will perform EHSA analysis by using `emerging_hotspot_analysis()` of sfdep package. It takes a spacetime object x (i.e. dengue_county_sf), and the quoted name of the variable of interest (i.e. WEEKLY_DENGUE_CASE_NUM) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = dengue_county_st, \n  .var = \"WEEKLY_DENGUE_CASE_NUM\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\n## Visualising the distribution of EHSA\n\nWe can now visualising the distribution of of differernt kinds of hot spots and cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\nFrom the above, we can see that the majority of villages in the districts of interest in Tainan City are oscillating hotspots, meaning they go from high to normal and vice-versa frequently.\n\n## Visualising EHSA\n\nNow that we know the distribution of the number and type of hot/cold spots in Tainan Village, we should also visualise it.\n\nBefore we do this, we must join *districts_sf* with *ehsa*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistrict_ehsa <- districts_sf %>%\n  left_join(ehsa,\n            by = join_by(VILLNAME == location))\n```\n:::\n\n\nNext, tmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- district_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(district_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise_2_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\nThe map above suggests that there is a degree of clustering of the number of dengue cases in a given village. Nonetheless, there exists a number of villages that oscillate between being a hotspot and being normal. Understanding the causes behind the sporadic spread would be useful in more helpful targeted programmes to contain the spread of dengue fever.\n",
    "supporting": [
      "Take_Home_Exercise_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}